@model TheBigDukan.Models.SignUpModel

@{
    ViewBag.Title = "SignUpView";
}
<style>
    .dpdw{
        width: 278px;
    height: 30px;
    border-radius: 5px;
    }
    .container-new {
        background-color:blue;
    }
    [name=UserType] {
        width: 278px;
    height: 30px;
    border-radius: 5px;
    }
</style>

<h2>SignUp</h2>

@using (Html.BeginForm("SignUpView","Login",FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CellNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CellNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CellNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              
                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control"}})
               
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              <div class="dpdw" style="background-color:forestgreen">
                  @Html.DropDownListFor(model => model.UserType, new List<SelectListItem> { new SelectListItem { Text = "Select", Value = "", }, new SelectListItem { Text = "Vendor", Value = "Vendor", }, new SelectListItem { Text = "Customer", Value = "Customer", } }, new { htmlAttributes = new { @class = "form-control" } })
              </div>        
             @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
            </div>
            <input   type="file" name="Image_new" value="Image_new"/>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
               
            </div>
        </div>
    </div>

}
